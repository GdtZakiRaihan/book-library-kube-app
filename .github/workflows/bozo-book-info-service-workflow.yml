# This workflow will build a docker container, publish it to IBM Container Registry, and deploy it to IKS when a release is created
#
# To configure this workflow:
#
# 1. Ensure that your repository contains a Dockerfile
# 2. Setup secrets in your repository by going to settings: Create ICR_NAMESPACE and IBM_CLOUD_API_KEY
# 3. Change the values for the IBM_CLOUD_REGION, REGISTRY_HOSTNAME, IMAGE_NAME, IKS_CLUSTER, DEPLOYMENT_NAME, and PORT

name: Book Info Service Workflow

on: 
  push:
    branches:
      - main
    paths:
      - 'bozo-book-info-service/**'

  workflow_dispatch:
    name:
      description: 'Test scenario tags'  
# Environment variables available to all jobs and steps in this workflow
env:
  GITHUB_SHA: ${{ github.sha }}
  IBM_CLOUD_API_KEY: ${{ secrets.IBM_CLOUD_API_KEY }}
  IBM_CLOUD_REGION: jp-tok
  ICR_NAMESPACE: ${{ secrets.ICR_NAMESPACE }}
  REGISTRY_HOSTNAME: docker.io
  DOCKER_USERNAME: abvijaykumar
  IMAGE_NAME: bozo-book-info-service
  DEPLOYMENT_NAME: book-info-service-deployments
  PORT: 8080

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Generate build number
      uses: einaregilsson/build-number@v3
      with:
        token: ${{secrets.github_token}}        

    - name: Print new build number
      run: echo "Build number is $BUILD_NUMBER"
    
    
    # Build the Docker image
    - name: Build with Docker
      run: |
        cd bozo-book-info-service
        ./mvnw package -Dnative
        docker build -f Dockerfile.native -t $IMAGE_NAME:$BUILD_NUMBER  .

#        ./mvnw package -Pnative -Dquarkus.native.container-build=true -Dquarkus.container-image.build=true -Dquarkus.container-image.username=$DOCKER_USERNAME -Dquarkus.container-image.name=$IMAGE_NAME -Dquarkus.container-image.tag=$BUILD_NUMBER -Dquarkus.container-image.group=$DOCKER_USERNAME
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{secrets.DOCKERHUB_USERNAME}}
        password: ${{secrets.DOCKERHUB_PASSWORD}}

    # Push the image to Dockerhub
    - name: Push the image to Dockerhub
      run: |
        docker push $DOCKER_USERNAME/$IMAGE_NAME:$BUILD_NUMBER

    # Update infra code with the new build number
